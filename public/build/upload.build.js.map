{"version":3,"sources":["webpack:///./public/app/upload/styles.scss","webpack:///./public/app/upload/index.js"],"names":["$","require","global","jQuery","document","ready","foundation","form","on","bind","ev","elem","parents","find","show","hide","e","preventDefault","console","log","click","text","width","files","length","formData","FormData","i","file","append","name","val","ajax","url","type","data","processData","contentType","success","xhr","XMLHttpRequest","upload","addEventListener","evt","lengthComputable","percentComplete","loaded","total","parseInt","progress","html"],"mappings":"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","file":"upload.build.js","sourcesContent":["// removed by extract-text-webpack-plugin\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./public/app/upload/styles.scss\n// module id = 6\n// module chunks = 1","// jQuery\r\nconst $ = require('jquery');\r\nglobal.jQuery = $;\r\n\r\n// Foundation\r\nrequire('foundation-sites/js/foundation.core');\r\nrequire('foundation-sites/js/foundation.util.mediaQuery');\r\nrequire('foundation-sites/js/foundation.abide');\r\n\r\n//Foundation icons\r\n//require('foundation-icons/foundation-icons.scss');\r\n\r\n// Section styles\r\nrequire('./styles.scss');\r\n\r\n$(document).ready(function() {\r\n\r\n  $(this).foundation();\r\n\r\n  let form = $(\"#upload-form\");\r\n\r\n  $('.upload-btn').on('click', function() {\r\n    form.foundation('validateForm');\r\n  });\r\n\r\n  $(this)\r\n    .bind('invalid.zf.abide', function(ev, elem) {\r\n      $(elem).parents('fieldset').find('.form-error').show();\r\n    })\r\n    .bind('valid.zf.abide', function(ev, elem) {\r\n      $(elem).parents('fieldset').find('.form-error').hide();\r\n    });\r\n\r\n  // stop default form submit and handle it with zf adibe\r\n  form\r\n    .bind('submit', function(e) {\r\n      e.preventDefault();\r\n      console.log('submit intercepted');\r\n      return false;\r\n    })\r\n    .bind('forminvalid.zf.abide', function(e,elem) {\r\n      console.log('form is invalid');\r\n    })\r\n    .bind('formvalid.zf.abide', function(e,elem) {\r\n      $('#upload-input').click();\r\n      $('label[for=\"progress\"]').text('0%');\r\n      $('.progress .meter').width('0%'); \r\n    });\r\n\r\n  $('#upload-input').on('change', function(){\r\n\r\n    let files = $(this)[0].files;\r\n\r\n    if (files.length > 0){\r\n      // create a FormData object which will be sent as the data payload in the\r\n      // AJAX request\r\n      let formData = new FormData();\r\n\r\n      // loop through all the selected files and add them to the formData object\r\n      for (let i = 0; i < files.length; i++) {\r\n        let file = files[i];\r\n\r\n        // add the files to formData object for the data payload\r\n        formData.append('uploads', file, file.name);\r\n\r\n        // adding other fields to formData\r\n        formData.append('title', $('.title input').val());\r\n        formData.append('month', $('.month select').val());\r\n        formData.append('year', $('.year input').val());\r\n        formData.append('description', $('.description textarea').val());\r\n\r\n      }\r\n\r\n      $.ajax({\r\n        url: '/upload/send',\r\n        type: 'POST',\r\n        data: formData,\r\n        processData: false,\r\n        contentType: false,\r\n        success: function(data){\r\n            console.log('upload successful!\\n' + data);\r\n        },\r\n        xhr: function() {\r\n          // create an XMLHttpRequest\r\n          let xhr = new XMLHttpRequest();\r\n\r\n          // listen to the 'progress' event\r\n          xhr.upload.addEventListener('progress', function(evt) {\r\n\r\n            if (evt.lengthComputable) {\r\n              // calculate the percentage of upload completed\r\n              let percentComplete = evt.loaded / evt.total;\r\n              percentComplete = parseInt(percentComplete * 100);\r\n\r\n              // update the progress bar with the new percentage\r\n              let progress = $('label[for=\"progress\"]');\r\n              progress.text(percentComplete + '%');\r\n              $('.progress .meter').width(percentComplete + '%');\r\n\r\n              // once the upload reaches 100%, set the progress bar text to done\r\n              if (percentComplete === 100) {\r\n                  progress.html('Done');\r\n              }\r\n\r\n            }\r\n\r\n          }, false);\r\n\r\n          return xhr;\r\n        }\r\n      });\r\n\r\n    }\r\n  });\r\n  \r\n});\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./public/app/upload/index.js"],"sourceRoot":""}